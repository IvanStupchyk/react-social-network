{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogsItem/DialogsItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm.tsx","hoc/AuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","to","activeClassName","active","name","Message","message","maxLength100","maxLengthCreator","AddMessageReduxForm","reduxForm","form","Form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","mapStateToProps","state","isAuth","auth","compose","connect","dialogsPage","addMessage","Component","restProps","dialogsElement","dialogs","map","d","messageElements","messages","m","dialogsItems","values","newMessageBody"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,6FCQjIC,EAAa,SAACC,GACvB,IAAIC,EAAI,mBAAeD,EAAME,IAE7B,OACI,qBAAKC,UAAS,UAAKC,IAAEC,QAArB,SACI,cAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAEI,OAAtC,SAA+CR,EAAMS,UCPpDC,EAAU,SAACV,GACpB,OACI,qBAAKG,UAAWC,IAAEO,QAAlB,SACKX,EAAMW,W,2CCDbC,EAAeC,YAAiB,KAsBzBC,EAAsBC,YAA8B,CAACC,KAAM,wBAArCD,EApB4C,SAACf,GAG5E,OACI,eAACiB,EAAA,EAAD,CAAMC,SAAUlB,EAAMmB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CACIC,UAAWC,IACXC,SAAU,CAACC,IAAUZ,GACrBH,KAAM,iBACNgB,YAAa,yBAGrB,8BACI,iD,+BCjBVC,EAAkB,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,S,WCmBZE,sBACXC,aARkB,SAACJ,GACnB,MAAO,CACHK,YAAaL,EAAMK,YACnBJ,OAAQD,EAAME,KAAKD,UAKE,CACrBK,kBDjBD,SAA6BC,GAUhC,OAAOH,YAAQL,EAARK,EARmB,SAAC/B,GAAgC,IAClD4B,EAAwB5B,EAAxB4B,OAAWO,EADsC,YACzBnC,EADyB,YAGtD,OAAK4B,EAEE,cAACM,EAAD,eAAeC,IAFF,cAAC,IAAD,CAAU7B,GAAI,gBCU3BwB,ECtBQ,SAAC9B,GACpB,IAAMoC,EAAiBpC,EAAMgC,YAAYK,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAY9B,KAAM8B,EAAE9B,KAAMP,GAAIqC,EAAErC,IAASqC,EAAErC,OAE/FsC,EAAkBxC,EAAMgC,YAAYS,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAS/B,QAAS+B,EAAE/B,SAAc+B,EAAExC,OAMhG,OACI,sBAAKC,UAAWC,IAAEiC,QAAlB,UACI,qBAAKlC,UAAWC,IAAEuC,aAAlB,SACKP,IAGL,qBAAKjC,UAAWC,IAAEqC,SAAlB,SACI,8BAAMD,MAGV,cAAC1B,EAAD,CAAqBI,SAdP,SAAC0B,GACnB5C,EAAMiC,WAAWW,EAAOC","file":"static/js/4.ddd153bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2DCDl\",\"dialogsItems\":\"Dialogs_dialogsItems__1LwsH\",\"active\":\"Dialogs_active__2wjx1\",\"messages\":\"Dialogs_messages__GiSq1\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from '../Dialogs.module.scss';\r\n\r\ntype propsDialogItem = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport const DialogItem = (props: propsDialogItem) => {\r\n    let path = `/dialogs/${props.id}`\r\n\r\n    return (\r\n        <div className={`${s.dialog}`}>\r\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from '../Dialogs.module.scss';\r\n\r\ntype propsMessage = {\r\n    message: string\r\n}\r\n\r\nexport const Message = (props: propsMessage) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n","import {Field, Form, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nexport type FormAddMessageType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nexport const AddMessageForm: React.FC<InjectedFormProps<FormAddMessageType>> = (props) => {\r\n\r\n\r\n    return (\r\n        <Form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    validate={[required, maxLength100]}\r\n                    name={'newMessageBody'}\r\n                    placeholder={'Enter your message'}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>add</button>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport const AddMessageReduxForm = reduxForm<FormAddMessageType>({form: 'dialogAddMessageForm'})(AddMessageForm)","import React, {ComponentType} from \"react\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: mapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n\r\n        return <Component {...restProps as T} />\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}","import React from 'react';\r\nimport {\r\n    addMessage,\r\n    DialogsPageType\r\n} from \"../../redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {withAuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage: DialogsPageType\r\n    isAuth: boolean\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    addMessage: (message: string) => void\r\n}\r\n\r\nexport type DialogsPropsType = MapStatePropsType & mapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        addMessage\r\n    }),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.scss';\r\nimport {DialogItem} from \"./DialogsItem/DialogsItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {AddMessageReduxForm, FormAddMessageType} from \"./AddMessageForm\";\r\n\r\nexport const Dialogs = (props: DialogsPropsType) => {\r\n    const dialogsElement = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id}/>)\r\n\r\n    const messageElements = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id}/>)\r\n\r\n    const addNewMessage = (values: FormAddMessageType) => {\r\n        props.addMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>{messageElements}</div>\r\n            </div>\r\n\r\n            <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n"],"sourceRoot":""}