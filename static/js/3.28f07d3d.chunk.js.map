{"version":3,"sources":["components/common/Paginator/Paginator.module.scss","components/Users/User.module.scss","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","../node_modules/reselect/es/index.js","redux/users-selectors.ts","components/Users/UsersContainer.tsx"],"names":["module","exports","Paginator","totalCount","pageSize","currentPage","portionSize","onPageChanged","changeStartPage","startPage","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","p","map","className","s","selectedPage","User","user","followingInProgress","follow","unFollow","to","id","alt","src","photos","small","userPhoto","followed","disabled","some","name","status","Users","props","items","u","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","undefined","concat","selector","params","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","getUsersSuper","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","getStartPage","UsersContainer","pageNumber","requestUsers","changeCurrentPage","this","Preloader","React","Component","compose","connect"],"mappings":"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","file":"static/js/3.28f07d3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3SUlk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"User_userPhoto__2SoUJ\"};","import React, {useState} from \"react\";\r\nimport s from \"./Paginator.module.scss\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport {Users} from \"../../Users/Users\";\r\n\r\ntype UsersPropsType = {\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    portionSize?: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    changeStartPage: (pageNumber: number) => void\r\n    startPage: number\r\n}\r\n\r\nexport let Paginator = ({totalCount, pageSize, currentPage, portionSize = 10, onPageChanged, changeStartPage, startPage}: UsersPropsType) => {\r\n    let pagesCount = Math.ceil(totalCount / pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState<number>(startPage)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => setPortionNumber(portionNumber - 1)}>prev</button>}\r\n            {\r\n                pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map(p => <span key={p} onClick={() => {\r\n                        onPageChanged(p)\r\n                        changeStartPage(portionNumber)\r\n                    }}\r\n                                    className={`${currentPage === p && s.selectedPage}`}>{p}</span>)\r\n            }\r\n            {portionCount > portionNumber &&\r\n                <button onClick={() => setPortionNumber(portionNumber + 1)}>next</button>}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./User.module.scss\";\r\nimport userPhoto from \"../../images/userPhoto.png\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype UserPropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n}\r\n\r\nexport let User = ({user, followingInProgress, follow, unFollow}: UserPropsType) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={`/profile/${user.id}`}>\r\n                        <img alt={'user avatar'} src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n                             className={s.userPhoto}\r\n                        />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      unFollow(user.id)\r\n                                  }}>unfollow</button>\r\n\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      follow(user.id)\r\n                                  }}>follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\ntype UsersPropsType = {\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    items: Array<UserType>\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress: Array<number>\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    changeStartPage: (pageNumber: number) => void\r\n    startPage: number\r\n}\r\n\r\nexport let Users = (props: UsersPropsType) => {\r\n    let pagesCount = Math.ceil(props.totalCount / props.pageSize)\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paginator\r\n            totalCount={props.totalCount}\r\n            currentPage={props.currentPage}\r\n            onPageChanged={props.onPageChanged}\r\n            pageSize={props.pageSize}\r\n            changeStartPage={props.changeStartPage}\r\n            startPage={props.startPage}\r\n            />\r\n            {\r\n                props.items.map(u => <div key={u.id}>\r\n                    <User\r\n                        user={u}\r\n                        followingInProgress={props.followingInProgress}\r\n                        follow={props.follow}\r\n                        unFollow={props.unFollow}\r\n                    />\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import {AppStateType} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\nimport {UserType} from \"./users-reducer\";\r\n\r\nconst getUsers = (state: AppStateType) => {\r\n    return state.usersPage.items\r\n}\r\n\r\nexport const getUsersSuper = createSelector(getUsers, (items: Array<UserType>) => {\r\n    return items\r\n})\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getStartPage = (state: AppStateType) => {\r\n    return state.usersPage.startPage\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {changeCurrentPage, changeStartPage, follow, requestUsers, unFollow, UserType} from \"../../redux/users-reducer\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize, getStartPage,\r\n    getTotalUsersCount,\r\n    getUsersSuper\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component<UsersType, any> {\r\n    componentDidMount(): void {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.requestUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize)\r\n\r\n        this.props.changeCurrentPage(pageNumber)\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : <Users\r\n                totalCount={this.props.totalCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                items={this.props.items}\r\n                onPageChanged={this.onPageChanged}\r\n                followingInProgress={this.props.followingInProgress}\r\n                follow={this.props.follow}\r\n                unFollow={this.props.unFollow}\r\n                changeStartPage={this.props.changeStartPage}\r\n                startPage={this.props.startPage}\r\n            />}\r\n        </>;\r\n    }\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    items: Array<UserType>\r\n    pageSize: number\r\n    currentPage: number\r\n    totalCount: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n    startPage: number\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    changeCurrentPage: (currentPage: number) => void\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    changeStartPage: (pageNumber: number) => void\r\n}\r\n\r\nexport type UsersType = MapStatePropsType & mapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        items: getUsersSuper(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        totalCount: getTotalUsersCount(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        startPage: getStartPage(state)\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        changeCurrentPage,\r\n        requestUsers,\r\n        follow,\r\n        unFollow,\r\n        changeStartPage\r\n    })\r\n)\r\n(UsersContainer)"],"sourceRoot":""}