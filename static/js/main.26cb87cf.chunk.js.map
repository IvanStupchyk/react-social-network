{"version":3,"sources":["redux/dialogs-reducer.ts","redux/users-reducer.ts","components/Navbar/Navbar.module.scss","components/Profile/ProfileStatus/ProfileStatus.module.scss","components/Header/Header.module.scss","api/api.ts","components/common/FormsControls/FormsControls.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","reportWebVitals.ts","redux/profile-reducer.ts","redux/sidebar-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","components/Friends/Friends.tsx","components/Settings/Settings.tsx","components/News/News.tsx","components/Music/Music.tsx","images/icons/aboutMe.svg","images/icons/skills.svg","images/icons/website.svg","images/icons/facebook.svg","images/icons/instagram.svg","images/icons/youtube.svg","images/icons/twitter.svg","images/icons/gitHub.svg","images/icons/vk.svg","images/icons/mail.svg","components/Profile/ProfileInfo/ProfileData/ProfileData.tsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","components/Profile/ProfileStatus/ProfileStatus.tsx","images/icons/pencilEdit.svg","images/icons/checkMark.svg","images/icons/uncheckMark.svg","images/icons/heart.svg","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/AddPostForm.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","images/icons/settingsIcon.svg","components/Navbar/Navbar.tsx","components/Navbar/NavbarContainer.tsx","components/Header/Header.tsx","App.tsx","SocialNetworkApp.tsx","index.tsx","components/common/FormsControls/FormsControls.tsx","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","redux/auth-reducer.ts","utils/validators/validators.tsx","images/preloader.svg","components/common/Preloader/Preloader.tsx","components/Profile/ProfileInfo/ProfileData/ProfileData.module.scss","images/userPhoto.png"],"names":["initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","newMessage","Date","getTime","addMessage","items","pageSize","currentPage","totalCount","isFetching","startPage","followingInProgress","UsersReducer","map","u","userId","followed","users","pageNumber","isFollowing","filter","followUser","unFollowUser","changeCurrentPage","toggleIsFetching","toggleIsFollowingProgress","changeStartPage","requestUsers","dispatch","a","usersAPI","getUsers","response","data","follow","resultCode","unFollow","module","exports","instance","axios","create","withCredentials","baseURL","headers","get","delete","post","authAPI","me","login","email","password","rememberMe","captcha","logout","profileAPI","getProfileUser","getUserStatus","updateUserStatus","status","put","savePhoto","image","formData","FormData","append","saveProfile","profile","securityAPI","getCaptchaUrl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","posts","likesCount","setUserStatus","savePhotoSuccess","initialized","rootReducer","combineReducers","profilePage","newPost","postMessage","p","postId","photos","small","dialogsPage","sidebar","usersPage","auth","AuthReducer","form","formReducer","app","store","createStore","applyMiddleware","thunk","Friends","className","s","title","Settings","props","News","Music","ProfileData","svgIcons","facebook","website","vk","twitter","instagram","youtube","gitHub","mail","topicUserInformation","fullName","lookingForAJob","aboutMeContainer","src","aboutMe","alt","skillsContainer","skills","lookingForAJobDescription","Object","keys","contacts","key","socialLink","target","href","ProfileDataFormReduxForm","reduxForm","handleSubmit","error","Form","onSubmit","EditPersonalInformation","fullNameAndSaveBtn","marginBottomForSections","Field","placeholder","maxLength","component","Input","validate","required","btnSaveProfileInfo","formSummaryError","Textarea","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","updateStatusUser","onStatusChange","e","currentTarget","value","prevProps","prevState","snapshot","this","autoFocus","onBlur","onChange","profileStatus","onDoubleClick","React","Component","Post","topBlockPost","avatarPostContainer","userPhoto","likesBlock","likeHeartContainer","heart","maxLength30","maxLengthCreator","AddPostReduxForm","addPostBlock","btnCreatePost","addPostForm","MyPostsContainer","connect","addPost","postsElements","postsContainer","ProfileInfo","isOwner","useState","setEditMode","Preloader","profileInformationContainer","mainProfileInfo","leftBlockMainProfileInfo","avaContainer","topBlockMainProfileInfo","userName","searchJobStatus","checkMark","uncheckMark","btnEditProfile","onClick","pencilEdit","inputAddUserPhoto","files","length","htmlFor","addUserPhoto","bottomInfoBlock","userContacts","initialValues","Profile","isAuth","to","ProfileContainer","match","params","authorizedUserId","toString","history","push","getStatusUser","refreshProfile","compose","getState","startUserId","undefined","filedError","split","correctFieldError","substring","toLowerCase","stopSubmit","_error","Promise","reject","withRouter","Navbar","nav","pagesLinksContainer","item","activeClassName","activeLink","active","btnsHeaderContainer","settingsBtn","settingsIcon","logInOutBtn","btnLogInOutContent","NavbarContainer","Header","header","DialogsContainer","lazy","UsersContainer","Login","App","initializeApp","fallback","exact","path","render","AppContainer","getAuthUser","SocialNetworkApp","ReactDOM","StrictMode","document","getElementById","FormControl","meta","touched","children","hasError","formControl","input","restProps","captchaUrl","payload","setAuthUserData","getCaptchaUrlSuccess","url","preloader"],"mappings":"+LAAWA,EAAgC,CACvCC,QAAS,CACL,CAACC,GAAI,IAAKC,KAAM,SAChB,CAACD,GAAI,IAAKC,KAAM,UAChB,CAACD,GAAI,IAAKC,KAAM,SAChB,CAACD,GAAI,IAAKC,KAAM,SAChB,CAACD,GAAI,IAAKC,KAAM,UAChB,CAACD,GAAI,IAAKC,KAAM,WAEpBC,SAAU,CACN,CAACF,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,6BACjB,CAACH,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,QAIZC,EAAiB,WAA0F,IAAzFC,EAAwF,uDAA/DP,EAAcQ,EAAiD,uCACnH,OAAQA,EAAOC,MACX,IAAK,sBACD,IAAMC,EAA0B,CAC5BR,IAAI,IAAIS,MAAOC,UACfP,QAASG,EAAOH,SAEpB,OAAO,2BAAIE,GAAX,IAAkBH,SAAS,GAAD,mBAAMG,EAAMH,UAAZ,CAAsBM,MACpD,QACI,OAAOH,IAKNM,EAAa,SAACR,GACvB,MAAO,CACHI,KAAM,sBACNJ,a,iSChCJL,EAA8B,CAC9Bc,MAAO,GACPC,SAAU,EACVC,YAAa,EACbC,WAAY,EACZC,YAAY,EACZC,UAAW,EACXC,oBAAqB,IAGZC,EAAe,WAAmF,IAAlFd,EAAiF,uDAA1DP,EAAcQ,EAA4C,uCAC1G,OAAQA,EAAOC,MACX,IAAK,eACD,OAAO,2BACAF,GADP,IAEIO,MAAOP,EAAMO,MAAMQ,KAAI,SAAAC,GAAC,OAAIA,EAAErB,KAAOM,EAAOgB,OAAhB,2BAA6BD,GAA7B,IAAgCE,UAAU,IAAQF,OAEtF,IAAK,iBACD,OAAO,2BACAhB,GADP,IAEIO,MAAOP,EAAMO,MAAMQ,KAAI,SAAAC,GAAC,OAAIA,EAAErB,KAAOM,EAAOgB,OAAhB,2BAA6BD,GAA7B,IAAgCE,UAAU,IAASF,OAEvF,IAAK,kBACD,OAAO,2BAAIhB,GAAX,IAAkBO,MAAON,EAAOkB,QACpC,IAAK,8BACD,OAAO,2BAAInB,GAAX,IAAkBU,WAAYT,EAAOS,aACzC,IAAK,4BACD,OAAO,2BAAIV,GAAX,IAAkBS,YAAaR,EAAOQ,cAC1C,IAAK,qBACD,OAAO,2BAAIT,GAAX,IAAkBW,WAAYV,EAAOU,aACzC,IAAK,oBACD,OAAO,2BAAIX,GAAX,IAAkBY,UAAWX,EAAOmB,aACxC,IAAK,+BACD,OAAO,2BACApB,GADP,IAEIa,oBAAqBZ,EAAOoB,YAAP,sBACXrB,EAAMa,qBADK,CACgBZ,EAAOgB,SACtCjB,EAAMa,oBAAoBS,QAAO,SAAA3B,GAAE,OAAIA,IAAOM,EAAOgB,YAEnE,QACI,OAAOjB,IAKNuB,EAAa,SAACN,GACvB,MAAO,CACHf,KAAM,eACNe,WAGKO,EAAe,SAACP,GACzB,MAAO,CACHf,KAAM,iBACNe,WAeKQ,EAAoB,SAAChB,GAC9B,MAAO,CACHP,KAAM,4BACNO,gBAGKiB,EAAmB,SAACf,GAC7B,MAAO,CACHT,KAAM,qBACNS,eAGKgB,EAA4B,SAACN,EAAsBJ,GAC5D,MAAO,CACHf,KAAM,+BACNmB,cACAJ,WAGKW,EAAkB,SAACR,GAC5B,MAAO,CACHlB,KAAM,oBACNkB,eAKKS,EAAe,SAACpB,EAAqBD,GAAtB,8CAAyD,WAAOsB,GAAP,eAAAC,EAAA,6DACjFD,EAASJ,GAAiB,IAC1BI,EAASL,EAAkBhB,IAFsD,SAI1DuB,IAASC,SAASxB,EAAaD,GAJ2B,OAI3E0B,EAJ2E,OAMjFJ,EAASJ,GAAiB,IAC1BI,EA7CO,CACH5B,KAAM,kBACNiB,MA2Cce,EAASC,KAAK5B,QAChCuB,EAxCO,CACH5B,KAAM,8BACNQ,WAsCwBwB,EAASC,KAAKzB,aARuC,2CAAzD,uDAUf0B,EAAS,SAACnB,GAAD,8CAAkC,WAAOa,GAAP,SAAAC,EAAA,6DACpDD,EAASH,GAA0B,EAAMV,IADW,SAG7Be,IAAST,WAAWN,GAHS,eAI1CkB,KAAKE,YAAcP,EAASP,EAAWN,IACjDa,EAASH,GAA0B,EAAOV,IALU,2CAAlC,uDAOTqB,EAAW,SAACrB,GAAD,8CAAkC,WAAOa,GAAP,SAAAC,EAAA,6DACtDD,EAASH,GAA0B,EAAMV,IADa,SAG/Be,IAASR,aAAaP,GAHS,eAI5CkB,KAAKE,YAAcP,EAASN,EAAaP,IACnDa,EAASH,GAA0B,EAAOV,IALY,2CAAlC,wD,mBCnHxBsB,EAAOC,QAAU,CAAC,IAAM,oBAAoB,oBAAsB,oCAAoC,KAAO,qBAAqB,WAAa,2BAA2B,YAAc,4BAA4B,oBAAsB,oCAAoC,YAAc,8B,0CCA5RD,EAAOC,QAAU,CAAC,cAAgB,uC,oBCAlCD,EAAOC,QAAU,CAAC,OAAS,yB,gCCD3B,qJAIMC,EAJN,OAIiBC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAeNd,EAAW,CACpBC,SADoB,WACqC,IAAhDxB,EAA+C,uDAAzB,EAAGD,EAAsB,uDAAH,EACjD,OAAOiC,EAASM,IAAT,qBAA0CtC,EAA1C,kBAA+DD,KAE1EgB,aAJoB,SAIPP,GACT,OAAOwB,EAASO,OAAT,iBAA4C/B,KAEvDM,WAPoB,SAOTN,GACP,OAAOwB,EAASQ,KAAT,iBAAuDhC,MAIzDiC,EAAU,CACnBC,GADmB,WAEf,OAAOV,EAASM,IAAmC,YAEvDK,MAJmB,SAIbC,EAAeC,GAA+E,IAA7DC,EAA4D,wDAA/BC,EAA+B,uDAAN,KACzF,OAAOf,EAASQ,KAAqC,aAAc,CAACI,QAAOC,WAAUC,aAAYC,aAErGC,OAPmB,WAQf,OAAOhB,EAASO,OAAyB,gBAIpCU,EAAa,CACtBC,eADsB,SACP1C,GACX,OAAOwB,EAASM,IAAT,kBAAqC9B,KAEhD2C,cAJsB,SAIR3C,GACV,OAAOwB,EAASM,IAAT,yBAA+B9B,KAE1C4C,iBAPsB,SAOLC,GACb,OAAOrB,EAASsB,IAAsB,iBAAkB,CAACD,YAE7DE,UAVsB,SAUZC,GACN,IAAMC,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,QAASH,GAElBxB,EAASsB,IAA4D,iBAAkBG,EAAU,CACpGpB,QAAS,CACL,eAAgB,0BAI5BuB,YApBsB,SAoBVC,GACR,OAAO7B,EAASsB,IAAsB,UAAWO,KAI5CC,EAAc,CACvBC,cADuB,WAEnB,OAAO/B,EAASM,IAAmB,+B,yCCzE3CR,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,wCAAwC,mBAAqB,0CAA0C,mBAAqB,0CAA0C,wBAA0B,+CAA+C,wBAA0B,+CAA+C,eAAiB,wC,mBCApcD,EAAOC,QAAU,CAAC,4BAA8B,iDAAiD,gBAAkB,qCAAqC,yBAA2B,8CAA8C,wBAA0B,6CAA6C,gBAAkB,qCAAqC,SAAW,8BAA8B,aAAe,kCAAkC,eAAiB,oCAAoC,aAAe,kCAAkC,gBAAkB,qCAAqC,kBAAoB,uCAAuC,aAAe,oC,kFCajpBiC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,kHCLHjF,EAAgC,CACvCyF,MAAO,CACH,CAACvF,GAAI,EAAGG,QAAS,mBAAoBqF,WAAY,GACjD,CAACxF,GAAI,EAAGG,QAAS,qBAAuBqF,WAAY,IACpD,CAACxF,GAAI,EAAGG,QAAS,sBAAwBqF,WAAY,GACrD,CAACxF,GAAI,EAAGG,QAAS,qBAAuBqF,WAAY,IAExDb,QAAS,KACTR,OAAQ,IAiDCsB,EAAgB,SAACtB,GAC1B,MAAO,CACH5D,KAAM,0BACN4D,WAGKuB,EAAmB,SAACpB,GAC7B,MAAO,CACH/D,KAAM,0BACN+D,UAKKN,EAAiB,SAAC1C,GAAD,8CAAkC,WAAOa,GAAP,eAAAC,EAAA,sEACrC2B,IAAWC,eAAe1C,GADW,OACtDiB,EADsD,OAE5DJ,EArBO,CACH5B,KAAM,2BACNoE,QAmBoBpC,EAASC,OAF2B,2CAAlC,uDCvE1B1C,EAAe,G,mCCDfA,EAAoC,CACpC6F,aAAa,GCMXC,EAAcC,YAAgB,CAChCC,YHI0B,WAA0F,IAAzFzF,EAAwF,uDAA/DP,EAAcQ,EAAiD,uCACnH,OAAQA,EAAOC,MACX,IAAK,mBACD,IAAMwF,EAAoB,CACtB/F,IAAI,IAAIS,MAAOC,UACfP,QAASG,EAAO0F,YAChBR,WAAY,GAEhB,OAAO,2BACAnF,GADP,IAEIkF,MAAM,GAAD,mBAAMlF,EAAMkF,OAAZ,CAAmBQ,MAEhC,IAAK,2BACD,OAAO,2BAAI1F,GAAX,IAAkBsE,QAASrE,EAAOqE,UACtC,IAAK,0BACD,OAAO,2BAAItE,GAAX,IAAkB8D,OAAQ7D,EAAO6D,SACrC,IAAK,sBACD,OAAO,2BAAI9D,GAAX,IAAkBkF,MAAOlF,EAAMkF,MAAM5D,QAAO,SAAAsE,GAAC,OAAIA,EAAEjG,KAAOM,EAAO4F,YACrE,IAAK,0BACD,OAAyB,OAAlB7F,EAAMsE,QAAN,2BACGtE,GADH,IACUsE,QAAQ,2BAAKtE,EAAMsE,SAAZ,IAAqBwB,OAAO,2BAAK9F,EAAMsE,QAAQwB,QAApB,IAA4BC,MAAO9F,EAAOgE,YADtF,eAEGjE,GACd,QACI,OAAOA,IG1BfgG,YAAajG,IACbkG,QFP0B,WAAqE,IAApEjG,EAAmE,uDAA9CP,EAChD,OAAOO,GEOPkG,UAAWpF,IACXqF,KAAMC,IACNC,KAAMC,IACNC,IDVsB,WAA8F,IAA7FvG,EAA4F,uDAA/DP,EAAcQ,EAAiD,uCACnH,OAAQA,EAAOC,MACX,IAAK,2BACD,OAAO,2BAAIF,GAAX,IAAkBsF,aAAa,IACnC,QACI,OAAOtF,MCsBNwG,EAAQC,YAAYlB,EAAamB,YAAgBC,M,0EC/BjDC,EAAU,WACnB,OACI,8BACI,oBAAIC,UAAWC,IAAEC,MAAjB,wBCHCC,EAAW,SAACC,GACrB,OACI,4CCFKC,EAAO,SAACD,GACjB,OACI,wCCFKE,EAAQ,SAACF,GAClB,OACI,yC,0DCLO,MAA0B,oCCA1B,MAA0B,mCCA1B,MAA0B,oCCA1B,MAA0B,qCCA1B,OAA0B,sCCA1B,OAA0B,oCCA1B,OAA0B,oCCA1B,OAA0B,mCCA1B,OAA0B,+BCA1B,OAA0B,iCCkB5BG,GAAc,SAAC,GAAgC,IAA/B9C,EAA8B,EAA9BA,QACnB+C,EAAW,CACb,SAAYC,EACZ,QAAWC,EACX,GAAMC,GACN,QAAWC,GACX,UAAaC,GACb,QAAWC,GACX,OAAUC,GACV,SAAYC,IAGhB,OACI,gCACI,sBAAKhB,UAAWC,IAAEgB,qBAAlB,UACI,8BAAG,4CAAmBxD,EAAQyD,YAC9B,8BAAG,oDAA2BzD,EAAQ0D,eAAiB,MAAQ,WAEnE,sBAAKnB,UAAWC,IAAEmB,iBAAlB,UACI,8BACI,qBAAKC,IAAKC,EAASC,IAAK,oBAE5B,4BAAI9D,EAAQ6D,aAGhB,sBAAKtB,UAAWC,IAAEuB,gBAAlB,UACI,8BACI,qBAAKH,IAAKI,EAAQF,IAAK,kBAE3B,4BAAI9D,EAAQiE,+BAGhB,8BACKC,OACIC,KAAKnE,EAAQoE,UACb3H,KAAI,SAAA4H,GACD,OAAO,sBAAe9B,UAAWC,IAAE8B,WAA5B,UACH,8BACI,qBAAKR,IAAK,sBAAuBF,IAAKb,EAASsB,OAEnD,mBAAGE,OAAQ,SAAUC,KAAMxE,EAAQoE,SAASC,GAA5C,SACKrE,EAAQoE,SAASC,OALTA,Y,oECqB5BI,GAA2BC,aAA4C,CAAC3C,KAAM,gBAAnD2C,EA/D4E,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,MAAO5E,EAAa,EAAbA,QAEvI,OACI,eAAC6E,GAAA,EAAD,CAAMC,SAAUH,EAAcpC,UAAWC,KAAEuC,wBAA3C,UACI,sBAAKxC,UAAWC,KAAEwC,mBAAlB,UACI,sBAAKzC,UAAWC,KAAEyC,wBAAlB,UACI,4CACA,cAACC,GAAA,EAAD,CACIC,YAAa,YACbC,UAAW,GACX9J,KAAM,WACN+J,UAAWC,KACXC,SAAU,CAACC,WAGnB,sBAAKjD,UAAWC,KAAEyC,wBAAlB,UACI,wBAAQ1C,UAAWC,KAAEiD,mBAArB,SAAyC,0CACzC,qBAAKlD,UAAWC,KAAEkD,iBAAlB,SACKd,UAIb,sBAAKrC,UAAWC,KAAEkB,eAAlB,UACI,oDACA,cAACwB,GAAA,EAAD,CACI5J,KAAM,iBACNM,KAAM,WACNyJ,UAAWC,UAGnB,sBAAK/C,UAAWC,KAAEyC,wBAAlB,UACI,wDACA,cAACC,GAAA,EAAD,CACIC,YAAa,yBACb7J,KAAM,4BACN+J,UAAWM,KACXJ,SAAU,CAACC,WAGnB,sBAAKjD,UAAWC,KAAEyC,wBAAlB,UACI,0CACA,cAACC,GAAA,EAAD,CACIC,YAAa,WACb7J,KAAM,UACN+J,UAAWM,UAGnB,8BACKzB,OAAOC,KAAKnE,EAAQoE,UAAU3H,KAAI,SAAA4H,GAC/B,OAAO,sBAAe9B,UAAWC,KAAEyC,wBAA5B,UACH,8BAAIZ,EAAJ,QACA,cAACa,GAAA,EAAD,CACIC,YAAad,EACb/I,KAAI,mBAAc+I,GAClBgB,UAAWC,SALFjB,c,qBClDxBuB,GAAb,4MACIlK,MAAQ,CACJmK,UAAU,EACVrG,OAAQ,EAAKmD,MAAMnD,QAH3B,EAMIsG,iBAAmB,WACf,EAAKC,SAAS,CACVF,UAAU,KARtB,EAYIG,mBAAqB,WACjB,EAAKD,SAAS,CACVF,UAAU,IAEd,EAAKlD,MAAMsD,iBAAiB,EAAKvK,MAAM8D,SAhB/C,EAmBI0G,eAAiB,SAACC,GACd,EAAKJ,SAAS,CACVvG,OAAQ2G,EAAEC,cAAcC,SArBpC,wDAyBI,SAAmBC,EAAmCC,EAA0BC,GACvEF,EAAU9G,SAAWiH,KAAK9D,MAAMnD,QAChCiH,KAAKV,SAAS,CACVvG,OAAQiH,KAAK9D,MAAMnD,WA5BpC,oBAiCI,WACI,OACI,8BACKiH,KAAK/K,MAAMmK,SACR,8BACI,uBACIa,WAAW,EACXC,OAAQF,KAAKT,mBACbK,MAAOI,KAAK/K,MAAM8D,OAClBoH,SAAUH,KAAKP,mBAIvB,8BACI,sBAAM3D,UAAWC,KAAEqE,cAAeC,cAAeL,KAAKX,iBAAtD,SAAyEW,KAAK9D,MAAMnD,QAAU,iBA/CtH,GAAmCuH,IAAMC,WCX1B,OAA0B,uCCA1B,OAA0B,sCCA1B,OAA0B,wC,wCCA1B,OAA0B,kCCY5BC,GAAO,SAACtE,GAAsB,IAAD,IACtC,OACI,sBAAKJ,UAAWC,KAAE7D,KAAlB,UACI,sBAAK4D,UAAWC,KAAE0E,aAAlB,UACI,qBAAK3E,UAAWC,KAAE2E,oBAAlB,SACI,qBAAKrD,IAAK,cAAeF,KAAK,UAAAjB,EAAM3C,eAAN,eAAewB,OAAOC,OAAQkB,EAAM3C,QAAQwB,OAAOC,MAAQ2F,QAE7F,sCAAIzE,EAAM3C,eAAV,aAAI,EAAeyD,cAEvB,mBAAGlB,UAAWC,KAAEnB,YAAhB,SAA8BsB,EAAMnH,UACpC,sBAAK+G,UAAWC,KAAE6E,WAAlB,UACI,qBAAK9E,UAAWC,KAAE8E,mBAAlB,SACI,qBAAKxD,IAAK,aAAcF,IAAK2D,OAEjC,iCAAO5E,EAAM9B,WAAb,mBChBV2G,GAAcC,aAAiB,IAoBxBC,GAAmBhD,aAA2B,CAAC3C,KAAM,eAAlC2C,EAlByC,SAAC/B,GACtE,OACI,eAACkC,GAAA,EAAD,CAAMC,SAAUnC,EAAMgC,aAAcpC,UAAWC,KAAEmF,aAAjD,UACI,wBAAQpF,UAAWC,KAAEoF,cAArB,yBACA,8BACI,cAAC1C,GAAA,EAAD,CACI3C,UAAWC,KAAEqF,YACbxC,UAAWM,KACXrK,KAAM,cACN6J,YAAa,GACbC,UAAW,GACXG,SAAU,CAACC,KAAUgC,cCA5BM,GAAmBC,aAPV,SAACrM,GACnB,MAAO,CACHkF,MAAOlF,EAAMyF,YAAYP,MACzBZ,QAAStE,EAAMyF,YAAYnB,WAIsB,CAACgI,Q3BoBnC,SAAC3G,GACpB,MAAO,CACHzF,KAAM,mBACNyF,iB2BvBwB0G,ECjBT,SAACpF,GACpB,IAAMsF,EAAgBtF,EAAM/B,MAAMnE,KAAI,SAAA6E,GAAC,OAAI,cAAC,GAAD,CAAM9F,QAAS8F,EAAE9F,QAAoBqF,WAAYS,EAAET,WAAYb,QAAS2C,EAAM3C,SAA/CsB,EAAEjG,OAM5E,OACI,sBAAKkH,UAAWC,KAAE0F,eAAlB,UACI,cAACR,GAAD,CAAkB5C,SANH,SAACuB,GACpB1D,EAAMqF,QAAQ3B,EAAMhF,gBAOhB,qBAAKkB,UAAWC,KAAE5B,MAAlB,SACKqH,UCKJE,GAAc,SAAC,GAA2F,IAA1FnI,EAAyF,EAAzFA,QAASR,EAAgF,EAAhFA,OAAQyG,EAAwE,EAAxEA,iBAAkBmC,EAAsD,EAAtDA,QAAS1I,EAA6C,EAA7CA,UAAWK,EAAkC,EAAlCA,YAAkC,EAClFsI,oBAAkB,GADgE,mBAC3GxC,EAD2G,KACjGyC,EADiG,KAGlH,IAAKtI,EACD,OAAO,cAACuI,EAAA,EAAD,IAmBX,OACI,sBAAKhG,UAAWC,IAAEgG,4BAAlB,UACI,sBAAKjG,UAAWC,IAAEiG,gBAAlB,UACI,sBAAKlG,UAAWC,IAAEkG,yBAAlB,UACI,qBAAKnG,UAAWC,IAAEmG,aAAlB,SACI,qBAAK7E,IAAK,cAAeF,IAAK5D,EAAQwB,OAASxB,EAAQwB,OAAOC,MAAQ2F,QAE1E,gCACI,sBAAK7E,UAAWC,IAAEoG,wBAAlB,UACI,mBAAGrG,UAAWC,IAAEqG,SAAhB,SAA2B7I,EAAQyD,WACnC,sBAAKlB,UAAWC,IAAEsG,gBAAlB,UACK9I,EAAQ0D,eACH,qBAAKE,IAAKmF,GAAWjF,IAAK,eAC1B,qBAAKF,IAAKoF,GAAalF,IAAK,iBAHtC,2BAMJ,cAAC,GAAD,CAAetE,OAAQA,EAAQyG,iBAAkBA,UAGxDmC,GACD,gCACI,sBAAK7F,UAAWC,IAAEyG,eAAgBC,QArC7B,WACjBZ,GAAY,IAoCA,UACI,qBAAKxE,IAAK,cAAeF,IAAKuF,KAC9B,6CAEJ,gCACI,uBAAO5G,UAAWC,IAAE4G,kBAAmBxN,KAAM,OAAQP,GAAI,OAClDuL,SAjCC,SAACT,GAAsC,IAAD,GAC9D,UAAIA,EAAE5B,OAAO8E,aAAb,aAAI,EAAgBC,SAChB5J,EAAUyG,EAAE5B,OAAO8E,MAAM,OAgCb,uBAAOE,QAAS,OAAQhH,UAAWC,IAAEgH,aAArC,gCAMZ,sBAAKjH,UAAWC,IAAEiH,gBAAlB,UACI,qBAAKlH,UAAWC,IAAEkH,aAAlB,SACK7D,EACK,cAACpB,GAAD,CACEK,SAlDP,SAAC9E,GACdD,EAAYC,GAASM,MACjB,kBAAMgI,GAAY,OAiDFtI,QAASA,EACT2J,cAAe3J,IAEjB,cAAC,GAAD,CACEA,QAASA,MAIrB,cAAC8H,GAAD,WCvFH8B,GAAU,SAACjH,GACpB,OAAKA,EAAMkH,OAKP,8BACI,cAAC,GAAD,CAAa7J,QAAS2C,EAAM3C,QACfR,OAAQmD,EAAMnD,OACdyG,iBAAkBtD,EAAMsD,iBACxBmC,QAASzF,EAAMyF,QACf1I,UAAWiD,EAAMjD,UACjBK,YAAa4C,EAAM5C,gBAV7B,cAAC,IAAD,CAAU+J,GAAI,YC8BhBC,GAAb,oKACI,WACI,IAAIpN,EAAS8J,KAAK9D,MAAMqH,MAAMC,OAAOtN,OAEhCA,IACDA,EAAS8J,KAAK9D,MAAMuH,iBAAmBzD,KAAK9D,MAAMuH,iBAAiBC,WAAa1D,KAAK9D,MAAMyH,QAAQC,KAAK,WAE5G5D,KAAK9D,MAAMtD,eAAe1C,GAC1B8J,KAAK9D,MAAM2H,cAAc3N,KARjC,+BAWI,WACI8J,KAAK8D,mBAZb,gCAeI,SAAmBjE,EAAgCC,EAA0BC,GACrEC,KAAK9D,MAAMqH,MAAMC,OAAOtN,SAAW2J,EAAU0D,MAAMC,OAAOtN,QAC1D8J,KAAK8D,mBAjBjB,oBAqBI,WAEI,OACI,cAAC,GAAD,2BACQ9D,KAAK9D,OADb,IAEIyF,SAAU3B,KAAK9D,MAAMqH,MAAMC,OAAOtN,OAClCqD,QAASyG,KAAK9D,MAAM3C,QACpBR,OAAQiH,KAAK9D,MAAMnD,OACnByG,iBAAkBQ,KAAK9D,MAAMsD,iBAC7BvG,UAAW+G,KAAK9D,MAAMjD,UACtBmK,OAAQpD,KAAK9D,MAAMkH,cA/BnC,GAAsC9C,IAAMC,WA+C7BwD,eACXzC,aAXkB,SAACrM,GACnB,MAAO,CACHsE,QAAStE,EAAMyF,YAAYnB,QAC3B6J,OAAQnO,EAAMmG,KAAKgI,OACnBrK,OAAQ9D,EAAMyF,YAAY3B,OAC1B0K,iBAAkBxO,EAAMmG,KAAKxG,MAMR,CACrBgE,iBACAiL,c/BTqB,SAAC3N,GAAD,8CAAkC,WAAOa,GAAP,eAAAC,EAAA,sEACpC2B,IAAWE,cAAc3C,GADW,OACrDiB,EADqD,OAE3DJ,EAASsD,EAAclD,EAASC,OAF2B,2CAAlC,uD+BUrBoI,iB/BNwB,SAACzG,GAAD,8CAAkC,WAAOhC,GAAP,SAAAC,EAAA,sEACvC2B,IAAWG,iBAAiBC,GADW,OAE7B,IAF6B,OAEjD3B,KAAKE,YACdP,EAASsD,EAActB,IAHmC,2CAAlC,uD+BOxBE,U/BDiB,SAACC,GAAD,8CAA+B,WAAOnC,GAAP,eAAAC,EAAA,sEAC7B2B,IAAWM,UAAUC,GADQ,OAEnB,KAD3B/B,EAD8C,QAEvCC,KAAKE,YACdP,EAASuD,EAAiBnD,EAASC,KAAKA,KAAK2D,OAAOC,QAHJ,2CAA/B,uD+BEjB1B,Y/BImB,SAACC,GAAD,8CAAwC,WAAOxC,EAAUiN,GAAjB,yBAAAhN,EAAA,6DACzDiN,EADyD,UAC3CD,IAAW5I,KAAKxG,UAD2B,aAC3C,EAAoB8O,WAClCxN,OAAyBgO,IAAhBD,EAA4BA,EAAc,IAFM,SAIxCtL,IAAWW,YAAYC,GAJiB,UAK9B,KAD3BpC,EAJyD,QAKlDC,KAAKE,WAL6C,gBAM3DP,EAAS6B,EAAe1C,IANmC,8BAQrDiO,EAAahN,EAASC,KAAKtC,SAAS,GAAGsP,MAAM,cAAc,GAC3DC,EAAoBF,EAAaA,EAAWG,UAAU,EAAGH,EAAWtB,OAAS,GAAG0B,cAAgB,aAEtGxN,EAASyN,YAAW,eAAgB,CAACC,OAAQJ,KAXc,kBAYpDK,QAAQC,OAAR,2BAAmCN,KAZiB,4CAAxC,2D+BFvBO,IARWb,CAUdT,I,oBC/Fc,OAA0B,yCCY5BuB,GAAS,SAAC3I,GACnB,OACI,sBAAKJ,UAAWC,KAAE+I,IAAlB,UACI,sBAAKhJ,UAAWC,KAAEgJ,oBAAlB,UACI,qBAAKjJ,UAAWC,KAAEiJ,KAAlB,SACI,cAAC,IAAD,CAAS3B,GAAG,WAAW4B,gBAAiBlJ,KAAEmJ,WAA1C,uBAEJ,qBAAKpJ,UAAS,UAAKC,KAAEiJ,KAAP,YAAejJ,KAAEoJ,QAA/B,SACI,cAAC,IAAD,CAAS9B,GAAG,WAAW4B,gBAAiBlJ,KAAEmJ,WAA1C,wBAEJ,qBAAKpJ,UAAWC,KAAEiJ,KAAlB,SACI,cAAC,IAAD,CAAS3B,GAAG,SAAS4B,gBAAiBlJ,KAAEmJ,WAAxC,qBAEJ,qBAAKpJ,UAAWC,KAAEiJ,KAAlB,SACI,cAAC,IAAD,CAAS3B,GAAG,QAAQ4B,gBAAiBlJ,KAAEmJ,WAAvC,oBAEJ,qBAAKpJ,UAAWC,KAAEiJ,KAAlB,SACI,cAAC,IAAD,CAAS3B,GAAG,SAAS4B,gBAAiBlJ,KAAEmJ,WAAxC,qBAEJ,qBAAKpJ,UAAWC,KAAEiJ,KAAlB,SACI,cAAC,IAAD,CAAS3B,GAAG,WAAW4B,gBAAiBlJ,KAAEmJ,WAA1C,0BAGPhJ,EAAMkH,QACP,sBAAKtH,UAAWC,KAAEqJ,oBAAlB,UACI,qBAAKtJ,UAAWC,KAAEsJ,YAAlB,SACI,eAAC,IAAD,CAAShC,GAAG,YAAY4B,gBAAiBlJ,KAAEmJ,WAA3C,UACI,qBAAK7H,IAAK,OAAQF,IAAKmI,KAD3B,gBAKJ,qBAAKxJ,UAAWC,KAAEwJ,YAAlB,SACI,qBAAKzJ,UAAWC,KAAEyJ,mBAAoB/C,QAASvG,EAAMxD,OAArD,SACI,wDChClB+M,G,4JACF,WACI,OACI,cAAC,GAAD,CACIrC,OAAUpD,KAAK9D,MAAMkH,OACrB/K,MAAO2H,KAAK9D,MAAM7D,MAClBK,OAAQsH,KAAK9D,MAAMxD,a,GANL4H,IAAMC,WAyBrBwD,eACXzC,aAToB,SAACrM,GACrB,MAAO,CACHmO,OAAQnO,EAAMmG,KAAKgI,OACnB/K,MAAOpD,EAAMmG,KAAK/C,SAMG,CAACK,aADfqL,CAGd0B,I,qBCtCYC,GAAS,WAClB,OACI,wBAAQ5J,UAAWC,KAAE4J,UCYvBC,GAAmBtF,IAAMuF,MAAK,kBAAM,iCACpCC,GAAiBxF,IAAMuF,MAAK,kBAAM,iCAClCE,GAAQzF,IAAMuF,MAAK,kBAAM,iCAYlBG,GAAb,uKACI,WACIhG,KAAK9D,MAAM+J,kBAFnB,oBAKI,WACI,OAAKjG,KAAK9D,MAAM3B,YAKZ,sBAAKuB,UAAU,cAAf,UACI,cAAC,GAAD,IACA,cAAC,GAAD,IAEA,qBAAKA,UAAU,sBAAf,SACI,cAAC,WAAD,CAAUoK,SAAU,cAACpE,EAAA,EAAD,IAApB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOqE,OAAK,EAACC,KAAM,IAAKC,OAAQ,kBAAM,cAAC,IAAD,CAAUhD,GAAI,gBACpD,cAAC,IAAD,CAAO+C,KAAM,WAAYC,OAAQ,kBAAM,cAACT,GAAD,OACvC,cAAC,IAAD,CAAOQ,KAAM,oBAAqBC,OAAQ,kBAAM,cAAC,GAAD,OAChD,cAAC,IAAD,CAAOD,KAAM,SAAUC,OAAQ,kBAAM,cAACP,GAAD,OACrC,cAAC,IAAD,CAAOM,KAAM,SAAUC,OAAQ,kBAAM,cAAC,EAAD,OACrC,cAAC,IAAD,CAAOD,KAAM,QAASC,OAAQ,kBAAM,cAAC,EAAD,OACpC,cAAC,IAAD,CAAOD,KAAM,WAAYC,OAAQ,kBAAM,cAAC,EAAD,OACvC,cAAC,IAAD,CAAOD,KAAM,YAAaC,OAAQ,kBAAM,cAAC,EAAD,OACxC,cAAC,IAAD,CAAOD,KAAM,SAAUC,OAAQ,kBAAM,cAACN,GAAD,OACrC,cAAC,IAAD,CAAOK,KAAM,IAAKC,OAAQ,kBAAM,mEApBzC,cAACvE,EAAA,EAAD,QAPnB,GAAyBvB,aA0CZ+F,GAAevC,YACxBzC,aAPoB,SAACrM,GACrB,MAAO,CACHsF,YAAatF,EAAMuG,IAAIjB,eAKF,CAAC0L,clClDD,kBAAoB,SAAClP,GAC9BA,EAASwP,eAEjB1M,MAAK,WACT9C,EAVG,CACH5B,KAAM,oCkCwDVyP,IAFwBb,CAG1BiC,ICtEWQ,GAAmB,WAC5B,OAAO,cAAC,IAAD,UACH,cAAC,IAAD,CAAU/K,MAAOA,EAAjB,SACI,cAAC6K,GAAD,SCHZG,IAASJ,OACL,cAAC,IAAMK,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,SAM5BlN,K,sJCRamN,EAA8C,SAAC,GAAkD,IAAD,IAAhDC,KAAO3I,EAAyC,EAAzCA,MAAO4I,EAAkC,EAAlCA,QAAUC,EAAwB,EAAxBA,SAC3EC,GADmG,mCACxF9I,GAAS4I,GAE1B,OACI,qBAAKjL,UAAS,UAAKC,IAAEmL,YAAP,YAAsBD,GAAYlL,IAAEoC,OAAlD,SACK6I,KAKA9H,EAAwC,SAAChD,GAAW,IACtDiL,EAA6BjL,EAA7BiL,MAAgBC,GAAalL,EAAtB4K,KAD8C,YACxB5K,EADwB,mBAG5D,OAAO,cAAC2K,EAAD,2BAAiB3K,GAAjB,aAAyB,oDAAciL,GAAWC,QAGhDvI,EAAqC,SAAC3C,GAAW,IACnDiL,EAA6BjL,EAA7BiL,MAAgBC,GAAalL,EAAtB4K,KAD2C,YACrB5K,EADqB,mBAGzD,OAAO,cAAC2K,EAAD,2BAAiB3K,GAAjB,aAAyB,iDAAWiL,GAAWC,S,mBC1B1D5P,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,aAAe,8BAA8B,cAAgB,+BAA+B,YAAc,+B,mBCA7KD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,aAAe,2BAA2B,oBAAsB,kCAAkC,mBAAqB,iCAAiC,WAAa,yBAAyB,YAAc,4B,4NCIpP/C,EAAyB,CACzBE,GAAI,KACJ0D,MAAO,KACPD,MAAO,KACPzC,YAAY,EACZwN,QAAQ,EACRiE,WAAY,MAGHhM,EAAc,WAAyE,IAAxEpG,EAAuE,uDAArDP,EAAcQ,EAAuC,uCAC/F,OAAQA,EAAOC,MACX,IAAK,qBAEL,IAAK,uBACD,OAAO,2BAAIF,GAAUC,EAAOoS,SAChC,QACI,OAAOrS,IAKNsS,EAAkB,SAAC3S,EAAmB0D,EAAsBD,EAAsB+K,GAC3F,MAAO,CACHjO,KAAM,qBACNmS,QAAS,CAAC1S,KAAI0D,QAAOD,QAAO+K,YAGvBoE,EAAuB,SAACH,GACjC,MAAO,CACHlS,KAAM,uBACNmS,QAAS,CAACD,gBAKLd,EAAc,yDAAW,WAAOxP,GAAP,uBAAAC,EAAA,sEACXmB,IAAQC,KADG,OAED,KAD3BjB,EAD4B,QAErBC,KAAKE,aAAmB,EACNH,EAASC,KAAKA,KAAlCxC,EADyB,EACzBA,GAAI0D,EADqB,EACrBA,MAAOD,EADc,EACdA,MAClBtB,EAASwQ,EAAgB3S,EAAI0D,EAAOD,GAAO,KAJb,2CAAX,uDAOdA,EAAQ,SAACC,EAAeC,EAAkBC,EAAqBC,GAAvD,8CAAyF,WAAO1B,GAAP,iBAAAC,EAAA,sEACnFmB,IAAQE,MAAMC,EAAOC,EAAUC,EAAYC,GADwC,OAGzE,KAF3BtB,EADoG,QAG7FC,KAAKE,YACdP,EAASwP,KACTxP,EAASyQ,EAAqB,SAEG,KAA7BrQ,EAASC,KAAKE,YACdP,EAAS0C,KAEP1E,EAAUoC,EAASC,KAAKtC,SAAS+N,OAAS,EAAI1L,EAASC,KAAKtC,SAAS,GAAK,aAChFiC,EAASyN,YAAW,QAAS,CAACC,OAAQ1P,MAXgE,2CAAzF,uDAcR2D,EAAS,yDAAoB,WAAO3B,GAAP,SAAAC,EAAA,sEACfmB,IAAQO,SADO,OAGL,IAHK,OAGzBtB,KAAKE,YACdP,EAASwQ,EAAgB,KAAM,KAAM,MAAM,IAJT,2CAApB,uDAOT9N,EAAgB,yDAAoB,WAAO1C,GAAP,iBAAAC,EAAA,sEACtBwC,IAAYC,gBADU,OACvCtC,EADuC,OAEvCkQ,EAAalQ,EAASC,KAAKqQ,IAEjC1Q,EAASyQ,EAAqBH,IAJe,2CAApB,wD,gCCpE7B,oEAAO,IAAMtI,EAAW,SAACa,GACrB,IAAIA,EAEJ,MAAQ,qBAGCoB,EAAmB,SAACrC,GAAD,OAAuB,SAACiB,GACpD,GAAIA,GAASA,EAAMiD,OAASlE,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,2ECP5B,MAA0B,sC,OCG5BmD,EAAY,WACrB,OACI,8BACI,qBAAKzE,IAAK,YAAaF,IAAKuK,Q,mBCLxClQ,EAAOC,QAAU,CAAC,qBAAuB,0CAA0C,iBAAmB,sCAAsC,gBAAkB,qCAAqC,kBAAoB,uCAAuC,WAAa,kC,gCCD5P,QAA0B,wC","file":"static/js/main.26cb87cf.chunk.js","sourcesContent":["export let initialState: DialogsPageType = {\r\n    dialogs: [\r\n        {id: '1', name: 'Vania'},\r\n        {id: '2', name: 'Andrey'},\r\n        {id: '3', name: 'Sveta'},\r\n        {id: '4', name: 'Sasha'},\r\n        {id: '5', name: 'Victor'},\r\n        {id: '6', name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsPageType = initialState, action: DialogsActionsTypes): DialogsPageType => {\r\n    switch (action.type) {\r\n        case 'DIALOGS/ADD-MESSAGE':\r\n            const newMessage: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: action.message\r\n            }\r\n            return {...state, messages: [...state.messages, newMessage]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actionC\r\nexport const addMessage = (message: string) => {\r\n    return {\r\n        type: 'DIALOGS/ADD-MESSAGE',\r\n        message\r\n    } as const\r\n}\r\n\r\n//types\r\nexport type DialogType = {\r\n    id: string\r\n    name: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogsPageType = {\r\n    messages: Array<MessageType>\r\n    dialogs: Array<DialogType>\r\n}\r\nexport type DialogsActionsTypes = addMessageActionType\r\nexport type addMessageActionType = ReturnType<typeof addMessage>\r\n\r\n","import {usersAPI} from \"../api/api\";\r\nimport {AppThunkType} from \"./redux-store\";\r\n\r\nlet initialState: UsersPageType = {\r\n    items: [],\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    totalCount: 0,\r\n    isFetching: true,\r\n    startPage: 1,\r\n    followingInProgress: []\r\n}\r\n\r\nexport const UsersReducer = (state: UsersPageType = initialState, action: UserActionsTypes): UsersPageType => {\r\n    switch (action.type) {\r\n        case \"USERS/FOLLOW\":\r\n            return {\r\n                ...state,\r\n                items: state.items.map(u => u.id === action.userId ? {...u, followed: true} : u)\r\n            }\r\n        case \"USERS/UNFOLLOW\":\r\n            return {\r\n                ...state,\r\n                items: state.items.map(u => u.id === action.userId ? {...u, followed: false} : u)\r\n            }\r\n        case \"USERS/SET-USERS\":\r\n            return {...state, items: action.users}\r\n        case \"USERS/SET-TOTAL-USERS-COUNT\":\r\n            return {...state, totalCount: action.totalCount}\r\n        case \"USERS/CHANGE-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.currentPage}\r\n        case \"TOGGLE-IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"CHANGE-START-PAGE\":\r\n            return {...state, startPage: action.pageNumber}\r\n        case \"TOGGLE-IS-FOLLOWING-PROGRESS\":\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollowing\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actionC\r\nexport const followUser = (userId: number) => {\r\n    return {\r\n        type: 'USERS/FOLLOW',\r\n        userId\r\n    } as const\r\n}\r\nexport const unFollowUser = (userId: number) => {\r\n    return {\r\n        type: 'USERS/UNFOLLOW',\r\n        userId\r\n    } as const\r\n}\r\nexport const setUsers = (users: Array<UserType>) => {\r\n    return {\r\n        type: 'USERS/SET-USERS',\r\n        users\r\n    } as const\r\n}\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return {\r\n        type: 'USERS/SET-TOTAL-USERS-COUNT',\r\n        totalCount\r\n    } as const\r\n}\r\nexport const changeCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: 'USERS/CHANGE-CURRENT-PAGE',\r\n        currentPage\r\n    } as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: 'TOGGLE-IS-FETCHING',\r\n        isFetching\r\n    } as const\r\n}\r\nexport const toggleIsFollowingProgress = (isFollowing: boolean, userId: number) => {\r\n    return {\r\n        type: 'TOGGLE-IS-FOLLOWING-PROGRESS',\r\n        isFollowing,\r\n        userId\r\n    } as const\r\n}\r\nexport const changeStartPage = (pageNumber: number) => {\r\n    return {\r\n        type: 'CHANGE-START-PAGE',\r\n        pageNumber\r\n    } as const\r\n}\r\n\r\n//thunksC\r\nexport const requestUsers = (currentPage: number, pageSize: number): AppThunkType => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(changeCurrentPage(currentPage))\r\n\r\n    const response = await usersAPI.getUsers(currentPage, pageSize)\r\n\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.data.items))\r\n    dispatch(setTotalUsersCount(response.data.totalCount))\r\n}\r\nexport const follow = (userId: number): AppThunkType => async (dispatch) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId))\r\n\r\n    const response = await usersAPI.followUser(userId)\r\n    !response.data.resultCode && dispatch(followUser(userId))\r\n    dispatch(toggleIsFollowingProgress(false, userId))\r\n}\r\nexport const unFollow = (userId: number): AppThunkType => async (dispatch) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId))\r\n\r\n    const response = await usersAPI.unFollowUser(userId)\r\n    !response.data.resultCode && dispatch(unFollowUser(userId))\r\n    dispatch(toggleIsFollowingProgress(false, userId))\r\n}\r\n\r\n//types\r\ntype PhotosType = {\r\n    small: null | string\r\n    large: null | string\r\n}\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: null\r\n    photos: PhotosType\r\n    status: null\r\n    followed: boolean\r\n}\r\nexport type UsersPageType = {\r\n    items: Array<UserType>\r\n    pageSize: number\r\n    currentPage: number\r\n    totalCount: number\r\n    isFetching: boolean\r\n    startPage: number\r\n    followingInProgress: Array<number>\r\n}\r\nexport type UserActionsTypes = ReturnType<typeof followUser>\r\n    | ReturnType<typeof unFollowUser>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof changeCurrentPage>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof toggleIsFollowingProgress>\r\n    | ReturnType<typeof changeStartPage>\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3cPQl\",\"pagesLinksContainer\":\"Navbar_pagesLinksContainer__1HzLT\",\"item\":\"Navbar_item__1qTnH\",\"activeLink\":\"Navbar_activeLink__1bbTB\",\"settingsBtn\":\"Navbar_settingsBtn__2X2QR\",\"btnsHeaderContainer\":\"Navbar_btnsHeaderContainer__29eOb\",\"logInOutBtn\":\"Navbar_logInOutBtn__3-bbY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStatus\":\"ProfileStatus_profileStatus__2rvo_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__18STJ\"};","import axios from \"axios\";\r\nimport {ProfileType} from \"../redux/profile-reducer\";\r\nimport {UsersPageType} from \"../redux/users-reducer\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '528fa1c0-cacc-47ff-ae93-32ce73ccde7f'\r\n    }\r\n})\r\n\r\ntype genericDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\ntype responseType<D> = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    data: D\r\n}\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 1) {\r\n        return instance.get<UsersPageType>(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    unFollowUser(userId: number) {\r\n        return instance.delete<responseType<{}>>(`follow/${userId}`,)\r\n    },\r\n    followUser(userId: number) {\r\n        return instance.post<responseType<genericDataType>>(`follow/${userId}`)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<responseType<genericDataType>>('auth/me')\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: string | null = null) {\r\n        return instance.post<responseType<{userId: number}>>('auth/login', {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete<responseType<{}>>('auth/login')\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfileUser(userId: string) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n    },\r\n    getUserStatus(userId: string) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateUserStatus(status: string) {\r\n        return instance.put<responseType<{}>>('profile/status', {status})\r\n    },\r\n    savePhoto(image: File) {\r\n        const formData = new FormData()\r\n        formData.append('image', image)\r\n\r\n        return instance.put<responseType<{photos: {small: string, large: string}}>>('/profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<responseType<{}>>('profile', profile)\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<{url: string}>('security/get-captcha-url')\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2cpQF\",\"error\":\"FormsControls_error__3gzUc\",\"formSummaryError\":\"FormsControls_formSummaryError__1yNyJ\",\"btnSaveProfileInfo\":\"FormsControls_btnSaveProfileInfo__11sN2\",\"fullNameAndSaveBtn\":\"FormsControls_fullNameAndSaveBtn__PM4-Q\",\"EditPersonalInformation\":\"FormsControls_EditPersonalInformation__3AmYo\",\"marginBottomForSections\":\"FormsControls_marginBottomForSections__3SFtv\",\"lookingForAJob\":\"FormsControls_lookingForAJob__lYY54\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInformationContainer\":\"ProfileInfo_profileInformationContainer__3iTIt\",\"mainProfileInfo\":\"ProfileInfo_mainProfileInfo__2ua5_\",\"leftBlockMainProfileInfo\":\"ProfileInfo_leftBlockMainProfileInfo__GQyTp\",\"topBlockMainProfileInfo\":\"ProfileInfo_topBlockMainProfileInfo__3p-zR\",\"bottomInfoBlock\":\"ProfileInfo_bottomInfoBlock__3TI9m\",\"userName\":\"ProfileInfo_userName__1Qku4\",\"avaContainer\":\"ProfileInfo_avaContainer__CRg3I\",\"btnEditProfile\":\"ProfileInfo_btnEditProfile__3GiLO\",\"addUserPhoto\":\"ProfileInfo_addUserPhoto__32Dbf\",\"searchJobStatus\":\"ProfileInfo_searchJobStatus__7vTVg\",\"inputAddUserPhoto\":\"ProfileInfo_inputAddUserPhoto__3_XUC\",\"userContacts\":\"ProfileInfo_userContacts__3aELh\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {profileAPI} from \"../api/api\";\r\nimport {AppThunkType} from \"./redux-store\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nexport let initialState: ProfilePageType = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 3},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 12},\r\n        {id: 3, message: 'It\\'s my second post', likesCount: 1},\r\n        {id: 4, message: 'It\\'s my third post', likesCount: 3}\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n}\r\n\r\nexport const profileReducer = (state: ProfilePageType = initialState, action: ProfileActionsTypes): ProfilePageType => {\r\n    switch (action.type) {\r\n        case 'PROFILE/ADD-POST':\r\n            const newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                message: action.postMessage,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        case \"PROFILE/SET-USER-PROFILE\":\r\n            return {...state, profile: action.profile}\r\n        case \"PROFILE/SET-USER-STATUS\":\r\n            return {...state, status: action.status}\r\n        case \"PROFILE/DELETE-POST\":\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        case \"PROFILE/SET-USER-AVATAR\":\r\n            return state.profile !== null\r\n                ? {...state, profile: {...state.profile, photos: {...state.profile.photos, small: action.image}}}\r\n                : {...state}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actionC\r\nexport const addPost = (postMessage: string) => {\r\n    return {\r\n        type: 'PROFILE/ADD-POST',\r\n        postMessage\r\n    } as const\r\n}\r\nexport const deletePost = (postId: number) => {\r\n    return {\r\n        type: 'PROFILE/DELETE-POST',\r\n        postId\r\n    } as const\r\n}\r\nexport const setUserProfile = (profile: ProfileType) => {\r\n    return {\r\n        type: 'PROFILE/SET-USER-PROFILE',\r\n        profile\r\n    } as const\r\n}\r\nexport const setUserStatus = (status: string) => {\r\n    return {\r\n        type: 'PROFILE/SET-USER-STATUS',\r\n        status\r\n    } as const\r\n}\r\nexport const savePhotoSuccess = (image: string) => {\r\n    return {\r\n        type: 'PROFILE/SET-USER-AVATAR',\r\n        image\r\n    } as const\r\n}\r\n\r\n//thunkC\r\nexport const getProfileUser = (userId: string): AppThunkType => async (dispatch) => {\r\n    const response = await profileAPI.getProfileUser(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\nexport const getStatusUser = (userId: string): AppThunkType => async (dispatch) => {\r\n    const response = await profileAPI.getUserStatus(userId)\r\n    dispatch(setUserStatus(response.data))\r\n}\r\nexport const updateStatusUser = (status: string): AppThunkType => async (dispatch) => {\r\n    const response = await profileAPI.updateUserStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatus(status))\r\n    }\r\n}\r\nexport const savePhoto = (image: File): AppThunkType => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(image)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos.small))\r\n    }\r\n}\r\nexport const saveProfile = (profile: ProfileType): AppThunkType => async (dispatch, getState) => {\r\n    const startUserId = getState().auth.id?.toString()\r\n    const userId = startUserId !== undefined ? startUserId : '1'\r\n\r\n    const response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getProfileUser(userId))\r\n    } else {\r\n        const filedError = response.data.messages[0].split('Contacts->')[1]\r\n        const correctFieldError = filedError ? filedError.substring(0, filedError.length - 1).toLowerCase() : 'some error'\r\n\r\n        dispatch(stopSubmit('edit-profile', {_error: correctFieldError}))\r\n        return Promise.reject(`Incorrect field: ${correctFieldError}`)\r\n    }\r\n}\r\n\r\n//types\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type ProfileContactsType = {\r\n    facebook: string\r\n    website: string\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: string\r\n    github: string\r\n    mainLink: string\r\n}\r\nexport type ProfilePhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts: ProfileContactsType\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    photos: ProfilePhotosType\r\n}\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    profile: ProfileType | null\r\n    status: string\r\n}\r\nexport type ProfileActionsTypes = ReturnType<typeof addPost>\r\n    | ReturnType<typeof setUserProfile>\r\n    | ReturnType<typeof setUserStatus>\r\n    | ReturnType<typeof deletePost>\r\n    | ReturnType<typeof savePhotoSuccess>\r\n","type SidebarType = {}\r\n\r\nexport type SidebarActionsTypes = {}\r\n\r\nlet initialState = {}\r\n\r\nexport const sidebarReducer = (state: SidebarType = initialState, action: SidebarActionsTypes) => {\r\n    return state\r\n}\r\n","import {AppThunkType} from \"./redux-store\";\r\nimport {getAuthUser} from \"./auth-reducer\";\r\n\r\nlet initialState: AppInitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nexport const AppReducer = (state: AppInitialStateType = initialState, action: AppActionsTypes): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET_INITIALIZED_DATA\":\r\n            return {...state, initialized: true}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actionC\r\nexport const setInitializedData = () => {\r\n    return {\r\n        type: 'APP/SET_INITIALIZED_DATA'\r\n    } as const\r\n}\r\n\r\n//thunkC\r\nexport const initializeApp = (): AppThunkType => (dispatch) => {\r\n    const promise = dispatch(getAuthUser())\r\n\r\n    promise.then(() => {\r\n        dispatch(setInitializedData())\r\n    })\r\n}\r\n\r\n//types\r\nexport type AppInitialStateType = {\r\n    initialized: boolean\r\n}\r\nexport type AppActionsTypes = setInitializedDataType\r\nexport type setInitializedDataType = ReturnType<typeof setInitializedData>","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {DialogsActionsTypes, dialogsReducer} from \"./dialogs-reducer\";\r\nimport {ProfileActionsTypes, profileReducer} from \"./profile-reducer\";\r\nimport {sidebarReducer} from \"./sidebar-reducer\";\r\nimport {UserActionsTypes, UsersReducer} from \"./users-reducer\";\r\nimport {AuthActionsTypes, AuthReducer} from \"./auth-reducer\";\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {FormAction, reducer as formReducer} from 'redux-form'\r\nimport {AppActionsTypes, AppReducer} from \"./app-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: UsersReducer,\r\n    auth: AuthReducer,\r\n    form: formReducer,\r\n    app: AppReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\ntype AppActionsType = AuthActionsTypes\r\n    | DialogsActionsTypes\r\n    | ProfileActionsTypes\r\n    | UserActionsTypes\r\n    | FormAction\r\n    | AppActionsTypes\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType,\r\n    AppStateType,\r\n    unknown,\r\n    AppActionsType>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './Friends.module.scss';\r\n\r\nexport const Friends = () => {\r\n    return (\r\n        <div>\r\n            <h4 className={s.title}>Friends</h4>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n// import s from './Settings.module.css';\r\n\r\nexport const Settings = (props: any) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n// import s from './News.module.scss';\r\n\r\nexport const News = (props: any) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n// import s from './Music.module.scss';\r\n\r\nexport const Music = (props: any) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/aboutMe.a10d925b.svg\";","export default __webpack_public_path__ + \"static/media/skills.f0436bc8.svg\";","export default __webpack_public_path__ + \"static/media/website.d6e268d1.svg\";","export default __webpack_public_path__ + \"static/media/facebook.2655df86.svg\";","export default __webpack_public_path__ + \"static/media/instagram.6a68a995.svg\";","export default __webpack_public_path__ + \"static/media/youtube.c06ffd7c.svg\";","export default __webpack_public_path__ + \"static/media/twitter.24f5dc5e.svg\";","export default __webpack_public_path__ + \"static/media/gitHub.5a6d99cc.svg\";","export default __webpack_public_path__ + \"static/media/vk.3098cb34.svg\";","export default __webpack_public_path__ + \"static/media/mail.8543df91.svg\";","import React from \"react\";\r\nimport {ProfileContactsType, ProfileType} from \"../../../../redux/profile-reducer\";\r\nimport s from \"./ProfileData.module.scss\";\r\nimport aboutMe from '../../../../images/icons/aboutMe.svg'\r\nimport skills from '../../../../images/icons/skills.svg'\r\nimport website from '../../../../images/icons/website.svg'\r\nimport facebook from '../../../../images/icons/facebook.svg'\r\nimport instagram from '../../../../images/icons/instagram.svg'\r\nimport youtube from '../../../../images/icons/youtube.svg'\r\nimport twitter from '../../../../images/icons/twitter.svg'\r\nimport gitHub from '../../../../images/icons/gitHub.svg'\r\nimport vk from '../../../../images/icons/vk.svg'\r\nimport mail from '../../../../images/icons/mail.svg'\r\n\r\ntype ProfileDataType = {\r\n    profile: ProfileType,\r\n}\r\n\r\nexport const ProfileData = ({profile}: ProfileDataType) => {\r\n    const svgIcons = {\r\n        'facebook': facebook,\r\n        'website': website,\r\n        'vk': vk,\r\n        'twitter': twitter,\r\n        'instagram': instagram,\r\n        'youtube': youtube,\r\n        'github': gitHub,\r\n        'mainLink': mail\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.topicUserInformation}>\r\n                <p><b>Full name: </b>{profile.fullName}</p>\r\n                <p><b>Looking for a job: </b>{profile.lookingForAJob ? 'yes' : 'no'}</p>\r\n            </div>\r\n            <div className={s.aboutMeContainer}>\r\n                <div>\r\n                    <img src={aboutMe} alt={'about me icon'}/>\r\n                </div>\r\n                <p>{profile.aboutMe}</p>\r\n            </div>\r\n\r\n            <div className={s.skillsContainer}>\r\n                <div>\r\n                    <img src={skills} alt={'skills icon'}/>\r\n                </div>\r\n                <p>{profile.lookingForAJobDescription}</p>\r\n            </div>\r\n\r\n            <div>\r\n                {Object\r\n                    .keys(profile.contacts)\r\n                    .map(key => {\r\n                        return <div key={key} className={s.socialLink}>\r\n                            <div>\r\n                                <img alt={'logo social network'} src={svgIcons[key as keyof ProfileContactsType]}/>\r\n                            </div>\r\n                            <a target={'_blank'} href={profile.contacts[key as keyof ProfileContactsType]}>\r\n                                {profile.contacts[key as keyof ProfileContactsType]}\r\n                            </a>\r\n                        </div>\r\n                    })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {ProfileType} from \"../../../../redux/profile-reducer\";\r\nimport {Field, Form, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../../utils/validators/validators\";\r\nimport s from \"../../../common/FormsControls/FormsControls.module.scss\";\r\nimport doubleCheckMark from '../../../../images/icons/doubleCheckMark.svg'\r\n\r\ntype ProfileDataFormType = {\r\n    profile: ProfileType\r\n}\r\n\r\nexport const ProfileDataForm: React.FC<InjectedFormProps<ProfileType, ProfileDataFormType> & ProfileDataFormType> = ({handleSubmit, error, profile}) => {\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit} className={s.EditPersonalInformation}>\r\n            <div className={s.fullNameAndSaveBtn}>\r\n                <div className={s.marginBottomForSections}>\r\n                    <b>Full name: </b>\r\n                    <Field\r\n                        placeholder={'full name'}\r\n                        maxLength={25}\r\n                        name={'fullName'}\r\n                        component={Input}\r\n                        validate={[required]}\r\n                    />\r\n                </div>\r\n                <div className={s.marginBottomForSections}>\r\n                    <button className={s.btnSaveProfileInfo}><span>save</span></button>\r\n                    <div className={s.formSummaryError}>\r\n                        {error}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.lookingForAJob}>\r\n                <b>Looking for a job: </b>\r\n                <Field\r\n                    name={'lookingForAJob'}\r\n                    type={'checkbox'}\r\n                    component={Input}\r\n                />\r\n            </div>\r\n            <div className={s.marginBottomForSections}>\r\n                <b>My professional skills:</b>\r\n                <Field\r\n                    placeholder={'My professional skills'}\r\n                    name={'lookingForAJobDescription'}\r\n                    component={Textarea}\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div className={s.marginBottomForSections}>\r\n                <b>About me:</b>\r\n                <Field\r\n                    placeholder={'About me'}\r\n                    name={'AboutMe'}\r\n                    component={Textarea}\r\n                />\r\n            </div>\r\n            <div>\r\n                {Object.keys(profile.contacts).map(key => {\r\n                    return <div key={key} className={s.marginBottomForSections}>\r\n                        <b>{key}: </b>\r\n                        <Field\r\n                            placeholder={key}\r\n                            name={`contacts.${key}`}\r\n                            component={Input}\r\n                        />\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport const ProfileDataFormReduxForm = reduxForm<ProfileType, ProfileDataFormType>({form: 'edit-profile'})(ProfileDataForm)","import React, {ChangeEvent} from \"react\";\r\nimport s from './ProfileStatus.module.scss'\r\n\r\ntype MapStatePropsType = {\r\n    status: string\r\n}\r\ntype MapDispatchPropsType = {\r\n    updateStatusUser: (status: string) => void\r\n}\r\nexport type OwnPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nexport class ProfileStatus extends React.Component<OwnPropsType, any> {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatusUser(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<OwnPropsType>, prevState: Readonly<any>, snapshot?: any): void {\r\n         if (prevProps.status !== this.props.status) {\r\n             this.setState({\r\n                 status: this.props.status\r\n             })\r\n         }\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <div>\r\n                {this.state.editMode ?\r\n                    <div>\r\n                        <input\r\n                            autoFocus={true}\r\n                            onBlur={this.deactivateEditMode}\r\n                            value={this.state.status}\r\n                            onChange={this.onStatusChange}\r\n                        />\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <span className={s.profileStatus} onDoubleClick={this.activateEditMode}>{this.props.status || '----'}</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/pencilEdit.fa38e5a2.svg\";","export default __webpack_public_path__ + \"static/media/checkMark.9977a2b1.svg\";","export default __webpack_public_path__ + \"static/media/uncheckMark.1abb9e7f.svg\";","export default __webpack_public_path__ + \"static/media/heart.79a26ed6.svg\";","import React from \"react\";\r\nimport s from './Post.module.scss'\r\nimport userPhoto from \"../../../../images/userPhoto.png\";\r\nimport {ProfileType} from \"../../../../redux/profile-reducer\";\r\nimport heart from '../../../../images/icons/heart.svg'\r\n\r\nexport type propsType = {\r\n    message: string\r\n    likesCount: number\r\n    profile: ProfileType | null\r\n}\r\n\r\nexport const Post = (props: propsType) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.topBlockPost}>\r\n                <div className={s.avatarPostContainer}>\r\n                    <img alt={'user avatar'} src={props.profile?.photos.small ? props.profile.photos.small : userPhoto}/>\r\n                </div>\r\n                <p>{props.profile?.fullName}</p>\r\n            </div>\r\n            <p className={s.postMessage}>{props.message}</p>\r\n            <div className={s.likesBlock}>\r\n                <div className={s.likeHeartContainer}>\r\n                    <img alt={'icon likes'} src={heart}/>\r\n                </div>\r\n                <span>{props.likesCount} likes</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {reduxForm, Field, Form, InjectedFormProps} from \"redux-form\";\r\nimport s from \"./MyPosts.module.scss\";\r\nimport React from \"react\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nexport type addPostFormType = {\r\n    postMessage: string\r\n}\r\n\r\nconst maxLength30 = maxLengthCreator(20)\r\n\r\nexport const AddPostForm: React.FC<InjectedFormProps<addPostFormType>> = (props) => {\r\n    return (\r\n        <Form onSubmit={props.handleSubmit} className={s.addPostBlock}>\r\n            <button className={s.btnCreatePost}>Create post</button>\r\n            <div>\r\n                <Field\r\n                    className={s.addPostForm}\r\n                    component={Textarea}\r\n                    name={'postMessage'}\r\n                    placeholder={''}\r\n                    maxLength={40}\r\n                    validate={[required, maxLength30]}\r\n                />\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport const AddPostReduxForm = reduxForm<addPostFormType>({form: 'addPostForm'})(AddPostForm)\r\n","import {addPost, PostType, ProfilePhotosType, ProfileType} from \"../../../redux/profile-reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\n\r\ntype MapStatePropsType = {\r\n    posts: Array<PostType>\r\n    profile: ProfileType | null\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    addPost: (postMessage: string) => void,\r\n}\r\n\r\nexport type MyPostsType = MapStatePropsType & mapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, {addPost}) (MyPosts)\r\n","import React from \"react\";\r\nimport s from './MyPosts.module.scss';\r\nimport {Post} from \"./Post/Post\";\r\nimport {MyPostsType} from \"./MyPostsContainer\";\r\nimport {addPostFormType, AddPostReduxForm} from \"./AddPostForm\";\r\n\r\nexport const MyPosts = (props: MyPostsType) => {\r\n    const postsElements = props.posts.map(p => <Post message={p.message} key={p.id} likesCount={p.likesCount} profile={props.profile}/>)\r\n\r\n    const addPostMessage = (value: addPostFormType) => {\r\n        props.addPost(value.postMessage)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsContainer}>\r\n            <AddPostReduxForm onSubmit={addPostMessage}/>\r\n\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport s from './ProfileInfo.module.scss';\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {ProfileType} from \"../../../redux/profile-reducer\";\r\nimport userPhoto from \"../../../images/userPhoto.png\";\r\nimport {ProfileData} from \"./ProfileData/ProfileData\";\r\nimport {ProfileDataFormReduxForm} from \"./ProfileDataForm/ProfileDataForm\";\r\nimport {ProfileStatus} from \"../ProfileStatus/ProfileStatus\"\r\nimport pencilEdit from '../../../images/icons/pencilEdit.svg'\r\nimport checkMark from '../../../images/icons/checkMark.svg'\r\nimport uncheckMark from '../../../images/icons/uncheckMark.svg'\r\nimport {MyPostsContainer} from \"../MyPosts/MyPostsContainer\";\r\n\r\n\r\ntype ProfileInfoType = {\r\n    profile: null | ProfileType\r\n    status: string\r\n    updateStatusUser: (status: string) => void\r\n    isOwner: boolean\r\n    savePhoto: (filePhoto: File) => void\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n}\r\n\r\nexport const ProfileInfo = ({profile, status, updateStatusUser, isOwner, savePhoto, saveProfile}: ProfileInfoType) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const goToEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const onSubmit = (profile: ProfileType) => {\r\n        saveProfile(profile).then(\r\n            () => setEditMode(false)\r\n        )\r\n    }\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files?.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInformationContainer}>\r\n            <div className={s.mainProfileInfo}>\r\n                <div className={s.leftBlockMainProfileInfo}>\r\n                    <div className={s.avaContainer}>\r\n                        <img alt={'user avatar'} src={profile.photos ? profile.photos.small : userPhoto}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className={s.topBlockMainProfileInfo}>\r\n                            <p className={s.userName}>{profile.fullName}</p>\r\n                            <div className={s.searchJobStatus}>\r\n                                {profile.lookingForAJob\r\n                                    ? <img src={checkMark} alt={'check mark'}/>\r\n                                    : <img src={uncheckMark} alt={'uncheck mark'}/>} Looking for a job\r\n                            </div>\r\n                        </div>\r\n                        <ProfileStatus status={status} updateStatusUser={updateStatusUser}/>\r\n                    </div>\r\n                </div>\r\n                {isOwner &&\r\n                <div>\r\n                    <div className={s.btnEditProfile} onClick={goToEditMode}>\r\n                        <img alt={'edit pencil'} src={pencilEdit}/>\r\n                        <button>edit</button>\r\n                    </div>\r\n                    <div>\r\n                        <input className={s.inputAddUserPhoto} type={'file'} id={'file'}\r\n                               onChange={onMainPhotoSelected}/>\r\n                        <label htmlFor={'file'} className={s.addUserPhoto}>add photo</label>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n\r\n            <div className={s.bottomInfoBlock}>\r\n                <div className={s.userContacts}>\r\n                    {editMode\r\n                        ? <ProfileDataFormReduxForm\r\n                            onSubmit={onSubmit}\r\n                            profile={profile}\r\n                            initialValues={profile}\r\n                        />\r\n                        : <ProfileData\r\n                            profile={profile}\r\n                        />\r\n                    }\r\n                </div>\r\n                <MyPostsContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {ProfilePropsType} from \"./ProfileContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nexport const Profile = (props: ProfilePropsType) => {\r\n    if (!props.isAuth) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatusUser={props.updateStatusUser}\r\n                         isOwner={props.isOwner}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfile={props.saveProfile}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {\r\n    getProfileUser,\r\n    getStatusUser,\r\n    savePhoto,\r\n    ProfileType,\r\n    updateStatusUser,\r\n    saveProfile\r\n} from \"../../redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router\";\r\nimport {compose} from \"redux\";\r\n\r\ntype PathParamsType = {\r\n    userId: any\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: null | ProfileType\r\n    isAuth: boolean\r\n    status: string\r\n    authorizedUserId: number | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getProfileUser: (userId: string) => void\r\n    getStatusUser: (userId: string) => void\r\n    updateStatusUser: (status: string) => void\r\n    savePhoto: (filePhoto: File) => void\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n}\r\n\r\nexport type ProfilePropsType = MapStatePropsType & MapDispatchPropsType & {isOwner: boolean}\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\r\n\r\nexport class ProfileContainer extends React.Component<PropsType, any> {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId ? this.props.authorizedUserId.toString() : this.props.history.push('/login')\r\n        }\r\n        this.props.getProfileUser(userId)\r\n        this.props.getStatusUser(userId)\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<any>, snapshot?: any): void {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatusUser={this.props.updateStatusUser}\r\n                savePhoto={this.props.savePhoto}\r\n                isAuth={this.props.isAuth}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isAuth: state.auth.isAuth,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id,\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        getProfileUser,\r\n        getStatusUser,\r\n        updateStatusUser,\r\n        savePhoto,\r\n        saveProfile\r\n    }),\r\n    withRouter\r\n)\r\n(ProfileContainer)","export default __webpack_public_path__ + \"static/media/settingsIcon.0829a49b.svg\";","import React from \"react\";\r\nimport s from './Navbar.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport settingsIcon from '../../images/icons/settingsIcon.svg'\r\nimport logOutIcon from '../../images/icons/logOutIcon.svg'\r\n\r\ntype NavbarPropsType = {\r\n    isAuth: boolean\r\n    login: null | string\r\n    logout: () => void\r\n}\r\n\r\nexport const Navbar = (props: NavbarPropsType) => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.pagesLinksContainer}>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/friends\" activeClassName={s.activeLink}>Friends</NavLink>\r\n                </div>\r\n            </div>\r\n            {props.isAuth &&\r\n            <div className={s.btnsHeaderContainer}>\r\n                <div className={s.settingsBtn}>\r\n                    <NavLink to=\"/settings\" activeClassName={s.activeLink}>\r\n                        <img alt={'icon'} src={settingsIcon}/>\r\n                        Settings\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s.logInOutBtn}>\r\n                    <div className={s.btnLogInOutContent} onClick={props.logout}>\r\n                        <button>Log out</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n        </nav>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {Navbar} from \"./Navbar\";\r\n\r\ntype MapDispatchPropsType = {\r\n    logout: () => void\r\n}\r\n\r\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass NavbarContainer extends React.Component<OwnPropsType, any> {\r\n    render(): React.ReactNode {\r\n        return (\r\n            <Navbar\r\n                isAuth = {this.props.isAuth}\r\n                login={this.props.login}\r\n                logout={this.props.logout}\r\n                 />\r\n        )\r\n    }\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    login: null | string\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {logout})\r\n)\r\n(NavbarContainer)\r\n","import React from \"react\";\r\nimport s from './Header.module.scss';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n\r\n        </header>\r\n    )\r\n}\r\n","import React, {Component, Suspense} from 'react';\nimport './App.css';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {Friends} from \"./components/Friends/Friends\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport {News} from \"./components/News/News\";\nimport {Music} from \"./components/Music/Music\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport NavbarContainer from \"./components/Navbar/NavbarContainer\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\nimport {Header} from \"./components/Header/Header\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'))\nconst Login = React.lazy(() => import('./components/Login/Login'))\n\ntype MapDispatchPropsType = {\n    initializeApp: () => void\n}\n\ntype MapStatePropsType = {\n    initialized: boolean\n}\n\ntype OwnPropsType = MapDispatchPropsType & MapStatePropsType\n\nexport class App extends Component<OwnPropsType, any> {\n    componentDidMount(): void {\n        this.props.initializeApp()\n    }\n\n    render(): React.ReactNode {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className=\"app-wrapper\">\n                <Header />\n                <NavbarContainer />\n\n                <div className=\"app-wrapper-content\">\n                    <Suspense fallback={<Preloader/>}>\n                        <Switch>\n                            <Route exact path={\"/\"} render={() => <Redirect to={'/profile'} />}/>\n                            <Route path={\"/dialogs\"} render={() => <DialogsContainer/>}/>\n                            <Route path={\"/profile/:userId?\"} render={() => <ProfileContainer/>}/>\n                            <Route path={\"/users\"} render={() => <UsersContainer/>}/>\n                            <Route path={\"/music\"} render={() => <Music/>}/>\n                            <Route path={\"/news\"} render={() => <News/>}/>\n                            <Route path={\"/friends\"} render={() => <Friends/>}/>\n                            <Route path={\"/settings\"} render={() => <Settings/>}/>\n                            <Route path={\"/login\"} render={() => <Login/>}/>\n                            <Route path={\"*\"} render={() => <div>404. PAGE NOT FOUND</div>}/>\n                        </Switch>\n                    </Suspense>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        initialized: state.app.initialized\n    }\n}\n\nexport const AppContainer = compose<React.ComponentType>(\n    connect(mapStateToProps, {initializeApp}),\n    withRouter\n)(App)\n\n\n","import {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./redux/redux-store\";\r\nimport React from \"react\";\r\nimport {AppContainer} from \"./App\";\r\n\r\nexport const SocialNetworkApp = () => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n}","import React from 'react';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {SocialNetworkApp} from \"./SocialNetworkApp\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <SocialNetworkApp />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\"\r\nimport s from './FormsControls.module.scss'\r\nimport {WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\"\r\n\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n}\r\n\r\nexport const FormControl: React.FC<FormControlPropsType> = ({meta: {error, touched}, children, ...props}) => {\r\n    const hasError = error && touched\r\n\r\n    return (\r\n        <div className={`${s.formControl} ${hasError && s.error}`}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n\r\n    return <FormControl {...props} ><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n\r\n    return <FormControl {...props} ><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsContainer\":\"MyPosts_postsContainer__c2AgU\",\"addPostBlock\":\"MyPosts_addPostBlock__1chiK\",\"btnCreatePost\":\"MyPosts_btnCreatePost__1D-g8\",\"addPostForm\":\"MyPosts_addPostForm__YmFYt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__OwVus\",\"topBlockPost\":\"Post_topBlockPost__1JeA8\",\"avatarPostContainer\":\"Post_avatarPostContainer__1iHja\",\"likeHeartContainer\":\"Post_likeHeartContainer__1jiXl\",\"likesBlock\":\"Post_likesBlock__2S6Yr\",\"postMessage\":\"Post_postMessage__3GJbO\"};","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {AppThunkType} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nlet initialState: AuthType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nexport const AuthReducer = (state: AuthType = initialState, action: AuthActionsTypes): AuthType => {\r\n    switch (action.type) {\r\n        case \"AUTH/SET_USER_DATA\":\r\n            return {...state, ...action.payload}\r\n        case \"AUTH/GET_CAPTCHA_URL\":\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actionC\r\nexport const setAuthUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => {\r\n    return {\r\n        type: 'AUTH/SET_USER_DATA',\r\n        payload: {id, email, login, isAuth}\r\n    } as const\r\n}\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string | null) => {\r\n    return {\r\n        type: 'AUTH/GET_CAPTCHA_URL',\r\n        payload: {captchaUrl}\r\n    } as const\r\n}\r\n\r\n//thunkC\r\nexport const getAuthUser = (): any => async (dispatch: Dispatch) => {\r\n    const response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        const {id, email, login} = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): AppThunkType => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUser())\r\n        dispatch(getCaptchaUrlSuccess(null))\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        const message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\nexport const logout = (): AppThunkType => async (dispatch) => {\r\n    const response = await authAPI.logout()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\nexport const getCaptchaUrl = (): AppThunkType => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url\r\n\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\n//types\r\nexport type AuthType = {\r\n    id: null | number\r\n    email: null | string\r\n    login: null | string\r\n    isFetching: boolean\r\n    isAuth: boolean\r\n    captchaUrl: null | string\r\n}\r\nexport type AuthActionsTypes = ReturnType<typeof setAuthUserData>\r\n    | ReturnType<typeof getCaptchaUrlSuccess>\r\n","export const required = (value: any) => {\r\n    if (value) return undefined\r\n\r\n    return  'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: any) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n\r\n    return undefined\r\n}","export default __webpack_public_path__ + \"static/media/preloader.15634106.svg\";","import React from \"react\";\r\nimport preloader from \"../../../images/preloader.svg\";\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img alt={'preloader'} src={preloader} />\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topicUserInformation\":\"ProfileData_topicUserInformation__1jrt7\",\"aboutMeContainer\":\"ProfileData_aboutMeContainer__nAg6o\",\"skillsContainer\":\"ProfileData_skillsContainer__1jCra\",\"contactsContainer\":\"ProfileData_contactsContainer__1Gqpo\",\"socialLink\":\"ProfileData_socialLink__1UFof\"};","export default __webpack_public_path__ + \"static/media/userPhoto.22c31152.png\";"],"sourceRoot":""}