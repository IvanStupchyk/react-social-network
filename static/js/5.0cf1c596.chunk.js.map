{"version":3,"sources":["components/Login/LoginForm.module.scss","components/Login/LoginForm.tsx","components/Login/Login.tsx"],"names":["module","exports","LoginReduxForm","reduxForm","form","handleSubmit","error","captchaUrl","useState","captcha","setCaptcha","btnDisabled","Form","onSubmit","className","s","loginForm","Field","placeholder","name","component","Input","validate","required","loginInput","rememberMeBlock","type","captchaContainer","captchaImageContainer","alt","src","captchaInput","value","onChange","e","currentTarget","errorLogin","formSummaryError","btnLogin","disabled","connect","state","isAuth","auth","login","props","to","wrapperLogin","formData","email","password","rememberMe"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,aAAe,gCAAgC,WAAa,8BAA8B,aAAe,gCAAgC,gBAAkB,mCAAmC,SAAW,4BAA4B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,WAAa,gC,gIC6ExZC,EAAiBC,YAAuC,CAACC,KAAM,SAA9CD,EA5DqE,SAAC,GAAuC,IAAtCE,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WAAgB,EACxGC,mBAAS,IAD+F,mBAC/HC,EAD+H,KACtHC,EADsH,KAMhIC,IAAcJ,IAAcE,EAClC,OACI,eAACG,EAAA,EAAD,CAAMC,SAAUR,EAAcS,UAAWC,IAAEC,UAA3C,UACI,wCAEA,cAACC,EAAA,EAAD,CAAOC,YAAa,wBACbC,KAAM,QACNC,UAAWC,IACXC,SAAU,CAACC,KACXT,UAAWC,IAAES,aAEpB,cAACP,EAAA,EAAD,CAAOC,YAAa,UACbC,KAAM,WACNC,UAAWC,IACXC,SAAU,CAACC,KACXT,UAAWC,IAAES,aAEpB,wBAAOV,UAAWC,IAAEU,gBAApB,UACI,cAACR,EAAA,EAAD,CAAOS,KAAM,WACNP,KAAM,aACNC,UAAWC,MAClB,kDAEJ,sBAAKP,UAAWC,IAAEY,iBAAlB,UACKpB,GACD,qBAAKO,UAAWC,IAAEa,sBAAlB,SACI,qBAAKC,IAAK,UAAWC,IAAKvB,MAI7BA,GACD,cAACU,EAAA,EAAD,CACIC,YAAa,UACbC,KAAM,UACNC,UAAWC,IACXP,UAAWC,IAAEgB,aACbC,MAAOvB,EACPwB,SAxCW,SAACC,GACxBxB,EAAWwB,EAAEC,cAAcH,aA0CvB,qBAAKlB,UAAWC,IAAEqB,WAAlB,SACK9B,GACD,qBAAKQ,UAAWC,IAAEsB,iBAAlB,SACK/B,MAKT,wBAAQQ,UAAWC,IAAEuB,SAAUC,SAAU5B,EAAzC,yB,wBC5BG6B,uBA3BO,SAACC,GACnB,MAAO,CACHC,OAAQD,EAAME,KAAKD,OACnBnC,WAAYkC,EAAME,KAAKpC,cAwBS,CAACqC,WAA1BJ,EAlBD,SAACK,GAOX,OAAIA,EAAMH,OACC,cAAC,IAAD,CAAUI,GAAI,aAIrB,qBAAKhC,UAAWC,IAAEgC,aAAlB,SACI,cAAC7C,EAAD,CAAgBW,SAZP,SAACmC,GAA4B,IACnCC,EAAwCD,EAAxCC,MAAOC,EAAiCF,EAAjCE,SAAUC,EAAuBH,EAAvBG,WAAY1C,EAAWuC,EAAXvC,QAEpCoC,EAAMD,MAAMK,EAAOC,EAAUC,EAAY1C,IASDF,WAAYsC,EAAMtC","file":"static/js/5.0cf1c596.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"LoginForm_loginForm__ycV__\",\"wrapperLogin\":\"LoginForm_wrapperLogin__7hyhy\",\"loginInput\":\"LoginForm_loginInput__12AC1\",\"captchaInput\":\"LoginForm_captchaInput__3-20x\",\"rememberMeBlock\":\"LoginForm_rememberMeBlock__1xmly\",\"btnLogin\":\"LoginForm_btnLogin__10seT\",\"captchaContainer\":\"LoginForm_captchaContainer__2fMX8\",\"captchaImageContainer\":\"LoginForm_captchaImageContainer__1iFhx\",\"errorLogin\":\"LoginForm_errorLogin__3kW2l\"};","import React, {ChangeEventHandler, useState} from \"react\";\r\nimport {Field, Form, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport s from './LoginForm.module.scss'\r\n\r\nexport type FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    error: string\r\n    captcha: string\r\n}\r\n\r\ntype LoginFormType = {\r\n    captchaUrl: null | string\r\n}\r\n\r\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType, LoginFormType> & LoginFormType> = ({handleSubmit, error, captchaUrl}) => {\r\n    const [captcha, setCaptcha] = useState('')\r\n\r\n    const changeValueCaptcha = (e: ChangeEventHandler<HTMLInputElement> | any) => {\r\n        setCaptcha(e.currentTarget.value)\r\n    }\r\n    const btnDisabled = captchaUrl ? !captcha : false\r\n    return (\r\n        <Form onSubmit={handleSubmit} className={s.loginForm}>\r\n            <h3>Log In</h3>\r\n\r\n            <Field placeholder={'hardtrynew@rambler.ru'}\r\n                   name={'email'}\r\n                   component={Input}\r\n                   validate={[required]}\r\n                   className={s.loginInput}/>\r\n\r\n            <Field placeholder={'z,sdlek'}\r\n                   name={'password'}\r\n                   component={Input}\r\n                   validate={[required]}\r\n                   className={s.loginInput}/>\r\n\r\n            <label className={s.rememberMeBlock}>\r\n                <Field type={'checkbox'}\r\n                       name={'rememberMe'}\r\n                       component={Input}/>\r\n                <span>Remember me</span>\r\n            </label>\r\n            <div className={s.captchaContainer}>\r\n                {captchaUrl &&\r\n                <div className={s.captchaImageContainer}>\r\n                    <img alt={'captcha'} src={captchaUrl}/>\r\n                </div>\r\n                }\r\n\r\n                {captchaUrl &&\r\n                <Field\r\n                    placeholder={'captcha'}\r\n                    name={'captcha'}\r\n                    component={Input}\r\n                    className={s.captchaInput}\r\n                    value={captcha}\r\n                    onChange={changeValueCaptcha}\r\n                />}\r\n            </div>\r\n            <div className={s.errorLogin}>\r\n                {error &&\r\n                <div className={s.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n            </div>\r\n\r\n\r\n            <button className={s.btnLogin} disabled={btnDisabled}>Login</button>\r\n        </Form>\r\n\r\n    )\r\n}\r\n\r\nexport const LoginReduxForm = reduxForm<FormDataType, LoginFormType>({form: 'login'})(LoginForm)","import React from \"react\";\r\nimport {FormDataType, LoginReduxForm} from \"./LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from './LoginForm.module.scss'\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    captchaUrl: null | string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\ntype PropsType = MapDispatchPropsType & MapStatePropsType\r\n\r\nconst Login = (props: PropsType) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        const {email, password, rememberMe, captcha} = formData\r\n\r\n        props.login(email, password, rememberMe, captcha)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapperLogin}>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login)"],"sourceRoot":""}